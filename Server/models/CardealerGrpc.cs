// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cardealer.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Cardealer {
  public static partial class CarDealing
  {
    static readonly string __ServiceName = "cardealer.CarDealing";

    static readonly grpc::Marshaller<global::Cardealer.User> __Marshaller_cardealer_User = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Cardealer.User.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Cardealer.Session_Id> __Marshaller_cardealer_Session_Id = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Cardealer.Session_Id.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Cardealer.Result> __Marshaller_cardealer_Result = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Cardealer.Result.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Cardealer.BalanceRequest> __Marshaller_cardealer_BalanceRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Cardealer.BalanceRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Cardealer.BalanceResponse> __Marshaller_cardealer_BalanceResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Cardealer.BalanceResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Cardealer.ListCarsRequest> __Marshaller_cardealer_ListCarsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Cardealer.ListCarsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Cardealer.ListCarsResponse> __Marshaller_cardealer_ListCarsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Cardealer.ListCarsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Cardealer.ActualCarRequest> __Marshaller_cardealer_ActualCarRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Cardealer.ActualCarRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Cardealer.ActualCarResponse> __Marshaller_cardealer_ActualCarResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Cardealer.ActualCarResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Cardealer.PurchaseCarRequest> __Marshaller_cardealer_PurchaseCarRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Cardealer.PurchaseCarRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Cardealer.PurchaseCarResponse> __Marshaller_cardealer_PurchaseCarResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Cardealer.PurchaseCarResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Cardealer.SellCarRequest> __Marshaller_cardealer_SellCarRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Cardealer.SellCarRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Cardealer.SellCarResponse> __Marshaller_cardealer_SellCarResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Cardealer.SellCarResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Cardealer.RepairCarRequest> __Marshaller_cardealer_RepairCarRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Cardealer.RepairCarRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Cardealer.RepairCarResponse> __Marshaller_cardealer_RepairCarResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Cardealer.RepairCarResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Cardealer.User, global::Cardealer.Session_Id> __Method_Login = new grpc::Method<global::Cardealer.User, global::Cardealer.Session_Id>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Login",
        __Marshaller_cardealer_User,
        __Marshaller_cardealer_Session_Id);

    static readonly grpc::Method<global::Cardealer.Session_Id, global::Cardealer.Result> __Method_Logout = new grpc::Method<global::Cardealer.Session_Id, global::Cardealer.Result>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Logout",
        __Marshaller_cardealer_Session_Id,
        __Marshaller_cardealer_Result);

    static readonly grpc::Method<global::Cardealer.BalanceRequest, global::Cardealer.BalanceResponse> __Method_Balance = new grpc::Method<global::Cardealer.BalanceRequest, global::Cardealer.BalanceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Balance",
        __Marshaller_cardealer_BalanceRequest,
        __Marshaller_cardealer_BalanceResponse);

    static readonly grpc::Method<global::Cardealer.ListCarsRequest, global::Cardealer.ListCarsResponse> __Method_ListCars = new grpc::Method<global::Cardealer.ListCarsRequest, global::Cardealer.ListCarsResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "ListCars",
        __Marshaller_cardealer_ListCarsRequest,
        __Marshaller_cardealer_ListCarsResponse);

    static readonly grpc::Method<global::Cardealer.ActualCarRequest, global::Cardealer.ActualCarResponse> __Method_ActualCar = new grpc::Method<global::Cardealer.ActualCarRequest, global::Cardealer.ActualCarResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ActualCar",
        __Marshaller_cardealer_ActualCarRequest,
        __Marshaller_cardealer_ActualCarResponse);

    static readonly grpc::Method<global::Cardealer.PurchaseCarRequest, global::Cardealer.PurchaseCarResponse> __Method_PurchaseCar = new grpc::Method<global::Cardealer.PurchaseCarRequest, global::Cardealer.PurchaseCarResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PurchaseCar",
        __Marshaller_cardealer_PurchaseCarRequest,
        __Marshaller_cardealer_PurchaseCarResponse);

    static readonly grpc::Method<global::Cardealer.SellCarRequest, global::Cardealer.SellCarResponse> __Method_SellCar = new grpc::Method<global::Cardealer.SellCarRequest, global::Cardealer.SellCarResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SellCar",
        __Marshaller_cardealer_SellCarRequest,
        __Marshaller_cardealer_SellCarResponse);

    static readonly grpc::Method<global::Cardealer.RepairCarRequest, global::Cardealer.RepairCarResponse> __Method_RepairCar = new grpc::Method<global::Cardealer.RepairCarRequest, global::Cardealer.RepairCarResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RepairCar",
        __Marshaller_cardealer_RepairCarRequest,
        __Marshaller_cardealer_RepairCarResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Cardealer.CardealerReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of CarDealing</summary>
    [grpc::BindServiceMethod(typeof(CarDealing), "BindService")]
    public abstract partial class CarDealingBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Cardealer.Session_Id> Login(global::Cardealer.User request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Cardealer.Result> Logout(global::Cardealer.Session_Id request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Cardealer.BalanceResponse> Balance(global::Cardealer.BalanceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task ListCars(global::Cardealer.ListCarsRequest request, grpc::IServerStreamWriter<global::Cardealer.ListCarsResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Cardealer.ActualCarResponse> ActualCar(global::Cardealer.ActualCarRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Cardealer.PurchaseCarResponse> PurchaseCar(global::Cardealer.PurchaseCarRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Cardealer.SellCarResponse> SellCar(global::Cardealer.SellCarRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Cardealer.RepairCarResponse> RepairCar(global::Cardealer.RepairCarRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for CarDealing</summary>
    public partial class CarDealingClient : grpc::ClientBase<CarDealingClient>
    {
      /// <summary>Creates a new client for CarDealing</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public CarDealingClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for CarDealing that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public CarDealingClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected CarDealingClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected CarDealingClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Cardealer.Session_Id Login(global::Cardealer.User request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Login(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Cardealer.Session_Id Login(global::Cardealer.User request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Login, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Cardealer.Session_Id> LoginAsync(global::Cardealer.User request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LoginAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Cardealer.Session_Id> LoginAsync(global::Cardealer.User request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Login, null, options, request);
      }
      public virtual global::Cardealer.Result Logout(global::Cardealer.Session_Id request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Logout(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Cardealer.Result Logout(global::Cardealer.Session_Id request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Logout, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Cardealer.Result> LogoutAsync(global::Cardealer.Session_Id request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LogoutAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Cardealer.Result> LogoutAsync(global::Cardealer.Session_Id request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Logout, null, options, request);
      }
      public virtual global::Cardealer.BalanceResponse Balance(global::Cardealer.BalanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Balance(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Cardealer.BalanceResponse Balance(global::Cardealer.BalanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Balance, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Cardealer.BalanceResponse> BalanceAsync(global::Cardealer.BalanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BalanceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Cardealer.BalanceResponse> BalanceAsync(global::Cardealer.BalanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Balance, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Cardealer.ListCarsResponse> ListCars(global::Cardealer.ListCarsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCars(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Cardealer.ListCarsResponse> ListCars(global::Cardealer.ListCarsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_ListCars, null, options, request);
      }
      public virtual global::Cardealer.ActualCarResponse ActualCar(global::Cardealer.ActualCarRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ActualCar(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Cardealer.ActualCarResponse ActualCar(global::Cardealer.ActualCarRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ActualCar, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Cardealer.ActualCarResponse> ActualCarAsync(global::Cardealer.ActualCarRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ActualCarAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Cardealer.ActualCarResponse> ActualCarAsync(global::Cardealer.ActualCarRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ActualCar, null, options, request);
      }
      public virtual global::Cardealer.PurchaseCarResponse PurchaseCar(global::Cardealer.PurchaseCarRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PurchaseCar(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Cardealer.PurchaseCarResponse PurchaseCar(global::Cardealer.PurchaseCarRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PurchaseCar, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Cardealer.PurchaseCarResponse> PurchaseCarAsync(global::Cardealer.PurchaseCarRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PurchaseCarAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Cardealer.PurchaseCarResponse> PurchaseCarAsync(global::Cardealer.PurchaseCarRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PurchaseCar, null, options, request);
      }
      public virtual global::Cardealer.SellCarResponse SellCar(global::Cardealer.SellCarRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SellCar(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Cardealer.SellCarResponse SellCar(global::Cardealer.SellCarRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SellCar, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Cardealer.SellCarResponse> SellCarAsync(global::Cardealer.SellCarRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SellCarAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Cardealer.SellCarResponse> SellCarAsync(global::Cardealer.SellCarRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SellCar, null, options, request);
      }
      public virtual global::Cardealer.RepairCarResponse RepairCar(global::Cardealer.RepairCarRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RepairCar(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Cardealer.RepairCarResponse RepairCar(global::Cardealer.RepairCarRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RepairCar, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Cardealer.RepairCarResponse> RepairCarAsync(global::Cardealer.RepairCarRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RepairCarAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Cardealer.RepairCarResponse> RepairCarAsync(global::Cardealer.RepairCarRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RepairCar, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override CarDealingClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CarDealingClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(CarDealingBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Login, serviceImpl.Login)
          .AddMethod(__Method_Logout, serviceImpl.Logout)
          .AddMethod(__Method_Balance, serviceImpl.Balance)
          .AddMethod(__Method_ListCars, serviceImpl.ListCars)
          .AddMethod(__Method_ActualCar, serviceImpl.ActualCar)
          .AddMethod(__Method_PurchaseCar, serviceImpl.PurchaseCar)
          .AddMethod(__Method_SellCar, serviceImpl.SellCar)
          .AddMethod(__Method_RepairCar, serviceImpl.RepairCar).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, CarDealingBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Login, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cardealer.User, global::Cardealer.Session_Id>(serviceImpl.Login));
      serviceBinder.AddMethod(__Method_Logout, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cardealer.Session_Id, global::Cardealer.Result>(serviceImpl.Logout));
      serviceBinder.AddMethod(__Method_Balance, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cardealer.BalanceRequest, global::Cardealer.BalanceResponse>(serviceImpl.Balance));
      serviceBinder.AddMethod(__Method_ListCars, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Cardealer.ListCarsRequest, global::Cardealer.ListCarsResponse>(serviceImpl.ListCars));
      serviceBinder.AddMethod(__Method_ActualCar, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cardealer.ActualCarRequest, global::Cardealer.ActualCarResponse>(serviceImpl.ActualCar));
      serviceBinder.AddMethod(__Method_PurchaseCar, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cardealer.PurchaseCarRequest, global::Cardealer.PurchaseCarResponse>(serviceImpl.PurchaseCar));
      serviceBinder.AddMethod(__Method_SellCar, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cardealer.SellCarRequest, global::Cardealer.SellCarResponse>(serviceImpl.SellCar));
      serviceBinder.AddMethod(__Method_RepairCar, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cardealer.RepairCarRequest, global::Cardealer.RepairCarResponse>(serviceImpl.RepairCar));
    }

  }
}
#endregion
